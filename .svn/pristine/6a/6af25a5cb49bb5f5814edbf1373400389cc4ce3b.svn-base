//
//  SuperMarketController.m
//  MixApp
//
//  Created by 陈雪丹 on 16/7/19.
//  Copyright © 2016年 cxd. All rights reserved.
//

#import "SuperMarketController.h"
#import "CategoryCell.h"
#import "SupermarketModel.h"
#import "CategoriesModel.h"
#import "ProductsCell.h"
#import "SupermarketHeadView.h"
#import "ProductsModel.h"
#import "ProductInfomationModel.h"

@interface SuperMarketController () <UITableViewDelegate,UITableViewDataSource>

@property (nonatomic, strong)UITableView *categoryTableView;
@property (nonatomic, strong)UITableView *productsTableView;
@property (nonatomic, strong)NSDictionary *dataDictionary;
@property (nonatomic, strong)SupermarketModel *dataModel;
@property (nonatomic, assign)BOOL isRelate;

@end

@implementation SuperMarketController

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"SearchViewControllerDeinit" object:nil];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.automaticallyAdjustsScrollViewInsets = NO;
    _isRelate = YES;
    [self addNotification];
    [self showProgressHUD];
    [self initCustomData];
    [self createCustomView];
}

- (void)addNotification {
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(shopCarBuyProductNumberDidChange) name:kShopCarBuyProductNumberDidChangeNotification object:nil];
}

- (void)shopCarBuyProductNumberDidChange {
    [_productsTableView reloadData];
}

- (void)initCustomData {
    NSString *path = [[NSBundle mainBundle] pathForResource:@"Supermarket" ofType:nil];
    NSData *data = [NSData dataWithContentsOfFile:path];
    if (data != nil) {
        NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:nil];
        _dataModel = [SupermarketModel mj_objectWithKeyValues:dict];
        _dataDictionary = [[dict objectForKey:@"data"] objectForKey:@"products"];
        if ([_dataModel.msg isEqualToString:@"success"]) {
            [SVProgressHUD dismiss];
        }
    }
}

- (void)showProgressHUD {
    if (![SVProgressHUD isVisible]) {
        [SVProgressHUD showWithStatus:@"正在加载中..."];
    }
}

- (void)createCustomView {
    [self.view addSubview:self.categoryTableView];
    [self.view addSubview:self.productsTableView];
}

- (UITableView *)categoryTableView {
    if (!_categoryTableView) {
        _categoryTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth * 0.25, kScreenHeight - 64 - 49) style:UITableViewStylePlain];
        _categoryTableView.delegate = self;
        _categoryTableView.dataSource = self;
        _categoryTableView.showsHorizontalScrollIndicator = NO;
        _categoryTableView.showsVerticalScrollIndicator = NO;
        _categoryTableView.backgroundColor = RGB(239, 239, 239);
        [_categoryTableView registerClass:[CategoryCell class] forCellReuseIdentifier:@"CategoryCell"];
    }
    return _categoryTableView;
}

- (UITableView *)productsTableView {
    if (!_productsTableView) {
        _productsTableView = [[UITableView alloc] initWithFrame:CGRectMake(kScreenWidth * 0.25, 0, kScreenWidth * 0.75, kScreenHeight - 64 - 49) style:UITableViewStylePlain];
        _productsTableView.delegate = self;
        _productsTableView.dataSource = self;
        _productsTableView.showsVerticalScrollIndicator = NO;
        _productsTableView.showsHorizontalScrollIndicator = NO;
        [_productsTableView registerClass:[ProductsCell class] forCellReuseIdentifier:@"ProductsCell"];
        [_productsTableView registerClass:[SupermarketHeadView class] forHeaderFooterViewReuseIdentifier:@"SupermarketHeadView"];
    }
    return _productsTableView;
}

#pragma mark - UITableViewDelegate,UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    if (tableView == _productsTableView) {
        return _dataModel.categories.count;
    }
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (tableView == _categoryTableView) {
        return _dataModel.categories.count;
    }
    NSArray *modelArray = [CategoriesModel mj_objectArrayWithKeyValuesArray:_dataModel.categories];
    CategoriesModel *model = modelArray[section];
    NSArray *arr = [_dataDictionary objectForKey:model.categoriesID];
    return arr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (tableView == _categoryTableView) {
        CategoryCell *cell = [tableView dequeueReusableCellWithIdentifier:@"CategoryCell"];
        NSArray *modelArray = _dataModel.categories;
        CategoriesModel *model = modelArray[indexPath.row];
        [cell buildContentViewWithModel:model];
        return cell;
    }
    ProductsCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ProductsCell"];
    NSArray *modelArray = _dataModel.categories;
    CategoriesModel *model = modelArray[indexPath.section];
    if ([model.categoriesID isEqualToString:@"a82"]) {
        cell.model = _dataModel.products.a82[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a96"]) {
        cell.model = _dataModel.products.a96[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a99"]) {
        cell.model = _dataModel.products.a99[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a106"]) {
        cell.model = _dataModel.products.a106[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a134"]) {
        cell.model = _dataModel.products.a134[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a135"]) {
        cell.model = _dataModel.products.a135[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a136"]) {
        cell.model = _dataModel.products.a136[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a141"]) {
        cell.model = _dataModel.products.a141[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a143"]) {
        cell.model = _dataModel.products.a143[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a147"]) {
        cell.model = _dataModel.products.a147[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a151"]) {
        cell.model = _dataModel.products.a151[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a152"]) {
        cell.model = _dataModel.products.a152[indexPath.row];
    }else if ([model.categoriesID isEqualToString:@"a158"]) {
        cell.model = _dataModel.products.a158[indexPath.row];
    }
    __weak typeof(self) WeakSelf = self;
    cell.addProductBlock = ^(UIImageView *imageView) {
        [WeakSelf addProductsAnimation:imageView];
//        [WeakSelf addProductsToBigShopCarAnimation:imageView];
    };
    return cell;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if (tableView == _productsTableView) {
        SupermarketHeadView *headView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:@"SupermarketHeadView"];
        NSArray *modelArray = _dataModel.categories;
        CategoriesModel *model = modelArray[section];
        headView.titleLabel.text = model.name;
        return headView;
    }
    return nil;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (tableView == _categoryTableView) {
        return 45;
    }
    return 85;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (tableView == _productsTableView) {
        return 25;
    }
    return 0;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    //分类
    if (tableView == _categoryTableView) {
        _isRelate = NO;
        [self.categoryTableView selectRowAtIndexPath:indexPath animated:NO scrollPosition:UITableViewScrollPositionMiddle];
        //点击了分类cell，让右边的tableView跟着滚动
        [self.productsTableView scrollToRowAtIndexPath:[NSIndexPath indexPathForItem:0 inSection:indexPath.row] atScrollPosition:UITableViewScrollPositionTop animated:YES];
    }else if (tableView == _productsTableView) {
        [self.productsTableView deselectRowAtIndexPath:indexPath animated:NO];
        
    }
}

- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section {
    if (_isRelate) {
        NSInteger topCellSection = [[[tableView indexPathsForVisibleRows] firstObject] section];
        if (tableView == self.productsTableView) {
            [self.categoryTableView selectRowAtIndexPath:[NSIndexPath indexPathForItem:topCellSection inSection:0] animated:YES scrollPosition:UITableViewScrollPositionMiddle];
        }
    }
}

- (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section {
    if (_isRelate) {
        NSInteger topCellSection = [[[tableView indexPathsForVisibleRows] firstObject] section];
        if (tableView == self.productsTableView) {
            [self.categoryTableView selectRowAtIndexPath:[NSIndexPath indexPathForItem:topCellSection inSection:0] animated:YES scrollPosition:UITableViewScrollPositionMiddle];
        }
    }
}

- (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section {
    if (_isRelate) {
        NSInteger topCellSection = [[[tableView indexPathsForVisibleRows] firstObject] section];
        if (tableView == self.productsTableView) {
            [self.categoryTableView selectRowAtIndexPath:[NSIndexPath indexPathForItem:topCellSection inSection:0] animated:YES scrollPosition:UITableViewScrollPositionMiddle];
        }
    }
}

#pragma mark - UIScrollViewDelegate
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate {
    _isRelate = YES;
}

@end
